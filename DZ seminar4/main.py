'''
Задача 1: Даны два неупорядоченных набора целых чисел (может быть, с
повторениями). Выдать без повторений в порядке возрастания все те числа, которые
встречаются в обоих наборах.
Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
элементов второго множества. Затем пользователь вводит сами элементы множеств.
'''

# set1 = (2, 4, 6, 8, 10, 12, 10, 8, 6, 4, 2, 15)
# set2 = (3, 6, 9, 12, 15, 18, 15)
# set3 = sorted(set(set1).intersection(set2))

# print(set3)

'''
Задача 2: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
круглой грядке, причем кусты высажены только по окружности. Таким образом, у
каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
выросло различное число ягод – на i-ом кусте выросло ai
 ягод.
В этом фермерском хозяйстве внедрена система автоматического сбора черники.
Эта система состоит из управляющего модуля и нескольких собирающих модулей.
Собирающий модуль за один заход, находясь непосредственно перед некоторым
кустом, собирает ягоды с этого куста и с двух соседних с ним.
Напишите программу для нахождения максимального числа ягод, которое может
собрать за один заход собирающий модуль, находясь перед некоторым кустом
заданной во входном файле грядки.
'''
# circule = [2, 5, 8, 13, 22, 11, 1, 14]

# circule.append(circule[0])
# circule.insert(0, circule[-2])
# res = sum(circule[0:3])
# for i in range(1, len(circule)-2):
#     temp = sum(circule[0 + i:3 + i])
#     if temp > res:
#         res = temp
# print(res)

'''
Задача 2 Оптимизированный вариант
'''

# circule = [14, 5, 8, 13, 22, 11, 23, 15]

# circule.append(circule[0])
# circule.insert(0, circule[-2])

# res = sum(circule[0:3])
# temp = sum(circule[0:3])
# for i in range(0, len(circule)-3):
#     temp = temp - circule[i] + circule[i+3]
#     if temp > res:
#         res = temp
# print(res)
